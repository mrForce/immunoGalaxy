<?xml version="1.0" encoding="utf-8"?>
<tool id="ellie_custom_filter" name="Filter TSV(s) by FDR and Q-value cutoffs" version="0.1.0">
  <command interpreter="python3">custom_filter.py
  $input_type.input_type_selector
  #if str($input_type.input_type_selector) == "msgf":
  ${input_type.archive}
  --score_column lnEValue
  --peptide_column Peptide
  --score_direction +
  --label_column Label
  --target_label 1
  --decoy_label -1
  #elif str($input_type.input_type_selector) == "percolator":
  ${input_type.archive}
  --score_column 'percolator score'
  --peptide_column sequence
  --score_direction +
  #else:
  ${input_type.input_file}
  --peptide_column '${input_type.peptide_column}'
  --label_column '${input_type.label_column}'
  --score_column '${input_type.score_column}'
  --target_label '${input_type.target_label}'
  --decoy_label '${input_type.decoy_label}'
  --score_direction '${input_type.score_direction_selector}'
  #end if  
  --threshold $threshold
  --psm_fdr_output '$psm_fdr'
  --psm_q_output '$psm_q'
  --peptide_fdr_output '$peptide_fdr'
  --peptide_q_output '$peptide_q'
  </command>
  <inputs>
    <param name="name" type="text" label="Type in a name for job" />
    <conditional name="input_type">
      <param name="input_type_selector" type="select" label="Select what you are filtering">
	<option value="msgf" selected="true">MS-GF+</option>
	<option value="percolator">Percolator</option>
	<option value="other">Other (including PLATO)</option>
      </param>
      <when value="percolator">
	<param name="input_file" type="data" label="Input File" format="txt" />
	<param name="peptide_column" type="text" label="Peptide Column Header" value="sequence"/>
	<param name="score_column" type="text" label="Score Column Header"  value="percolator score" />
	<param name="label_column" type="text" label="Label Column Header" value="Label" />
	<param name="target_label" type="text" label="Target Label" value="1"/>
	<param name="decoy_label" type="text" label="Decoy Label" value="-1"/>
	<param name="score_direction_selector" type="select" label="Select the score direction">
	  <option value="+" selected="true">Higher better</option>
	  <option value="-">Lower better</option>
	</param>
      </when>
      <when value="msgf">
	<param name="input_file" type="data" label="Input File" format="txt" />
	<param name="peptide_column" type="text" label="Peptide Column Header" value="Peptide"/>
	<param name="score_column" type="text" label="Score Column Header"  value="lnEValue" />
	<param name="label_column" type="text" label="Label Column Header" value="Label" />
	<param name="target_label" type="text" label="Target Label" value="1"/>
	<param name="decoy_label" type="text" label="Decoy Label" value="-1"/>
	<param name="score_direction_selector" type="select" label="Select the score direction">
	  <option value="+" selected="true">Higher better</option>
	  <option value="-">Lower better</option>
	</param>
      </when>
      <when value="other">
	<param name="input_file" type="data" label="Input File" format="txt" />
	<param name="peptide_column" type="text" label="Peptide Column Header" value="Peptide"/>
	<param name="score_column" type="text" label="Score Column Header"  value="Avg" />
	<param name="label_column" type="text" label="Label Column Header" value="Label" />
	<param name="target_label" type="text" label="Target Label" value="1"/>
	<param name="decoy_label" type="text" label="Decoy Label" value="-1"/>
	<param name="score_direction_selector" type="select" label="Select the score direction">
	  <option value="+" selected="true">Higher better</option>
	  <option value="-">Lower better</option>
	</param>
      </when>
    </conditional> 
    <param name="threshold" type="float" min="0" max="1" value="0.01" label="FDR/Q Value Threshold" />
  </inputs>
  <outputs>
    <data format="txt" name="psm_fdr" label="${name} PSM-level FDR Filter" />
    <data format="txt" name="psm_q" label="${name} PSM-level Q-Value Filter" />
    <data format="txt" name="peptide_fdr" label="${name} Peptide-level FDR Filter" />
    <data format="txt" name="peptide_q" label="${name} Peptide-level Q-value Filter" />
  </outputs>


  <tests>
    <test>
      <param name="input" value="fa_gc_content_input.fa"/>
      <output name="out_file1" file="fa_gc_content_output.txt"/>
    </test>
  </tests>         
  
  <help>
    This tool computes GC content from a FASTA file.
  </help>

</tool>


