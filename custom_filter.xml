<?xml version="1.0" encoding="utf-8"?>
<tool id="ellie_custom_filter" name="Filter TSV(s) by FDR and Q-value cutoffs" version="0.1.0">
  <command interpreter="python3">custom_filter.py
  ${input_type.input_file}
  --peptide_column '${input_type.peptide_column}'
  --label_column '${input_type.label_column}'
  --score_column '${input_type.score_column}'
  --target_label '${input_type.target_label}'
  --decoy_label '${input_type.decoy_label}'
  --score_direction '${input_type.score_direction_selector}'
  --threshold $threshold
  --psm_fdr_output '$psm_fdr'
  --psm_q_output '$psm_q'
  --peptide_fdr_output '$peptide_fdr'
  --peptide_q_output '$peptide_q'
  </command>
  <inputs>
    <param name="name" type="text" label="Type in a name for job" />
    <conditional name="input_type">
      <param name="input_type_selector" type="select" label="Select what you are filtering">
	<option value="msgf" selected="true">MS-GF+</option>
	<option value="percolator">Percolator</option>
	<option value="other">Other (including PLATO)</option>
      </param>
      <when value="percolator">
	<param name="input_file" type="data" label="Input File" format="txt" />
	<param name="peptide_column" type="text" label="Peptide Column Header" value="sequence"/>
	<param name="score_column" type="text" label="Score Column Header"  value="percolator score" />
	<param name="label_column" type="text" label="Label Column Header" value="Label" />
	<param name="target_label" type="text" label="Target Label" value="1"/>
	<param name="decoy_label" type="text" label="Decoy Label" value="-1"/>
	<param name="score_direction_selector" type="select" label="Select the score direction">
	  <option value="+" selected="true">Higher better</option>
	  <option value="-">Lower better</option>
	</param>
      </when>
      <when value="msgf">
	<param name="input_file" type="data" label="Input File" format="txt" />
	<param name="peptide_column" type="text" label="Peptide Column Header" value="Peptide"/>
	<param name="score_column" type="text" label="Score Column Header"  value="lnEValue" />
	<param name="label_column" type="text" label="Label Column Header" value="Label" />
	<param name="target_label" type="text" label="Target Label" value="1"/>
	<param name="decoy_label" type="text" label="Decoy Label" value="-1"/>
	<param name="score_direction_selector" type="select" label="Select the score direction">
	  <option value="+" selected="true">Higher better</option>
	  <option value="-">Lower better</option>
	</param>
      </when>
      <when value="other">
	<param name="input_file" type="data" label="Input File" format="txt" />
	<param name="peptide_column" type="text" label="Peptide Column Header" value="Peptide"/>
	<param name="score_column" type="text" label="Score Column Header"  value="Avg" />
	<param name="label_column" type="text" label="Label Column Header" value="Label" />
	<param name="target_label" type="text" label="Target Label" value="1"/>
	<param name="decoy_label" type="text" label="Decoy Label" value="-1"/>
	<param name="score_direction_selector" type="select" label="Select the score direction">
	  <option value="+" selected="true">Higher better</option>
	  <option value="-">Lower better</option>
	</param>
      </when>
    </conditional> 
    <param name="threshold" type="float" min="0" max="1" value="0.01" label="FDR/Q Value Threshold" />
  </inputs>
  <outputs>
    <data format="txt" name="psm_fdr" label="${name} PSM-level Step-Down Filter" />
    <data format="txt" name="psm_q" label="${name} PSM-level Q-Value Filter" />
    <data format="txt" name="peptide_fdr" label="${name} Peptide-level Step-Down Filter" />
    <data format="txt" name="peptide_q" label="${name} Peptide-level Q-value Filter" />
  </outputs>


  <tests>
    <test>
      <param name="input" value="fa_gc_content_input.fa"/>
      <output name="out_file1" file="fa_gc_content_output.txt"/>
    </test>
  </tests>         
  
  <help>
    This tool is for computing FDR/Q-values and filtering based on them. It assumes that the search was done using concatenated TDC. That is, each spectrum is searched against a database consisting of both targets and decoys, and is matched to **one** peptide, either a target or decoy peptide. This match is called a peptide-spectrum match (PSM). Note that this tool is *not* compatible with searches performed using seperated TDC. That is, where each spectra is matched to both a target peptide, and a decoy peptide.

    The tool requires a TSV (tab-seperated value) file as input. The first row is a header row. The remaining rows are the PSMs. Each row (PSM) must contain the: Peptide, score, and label; additionally, the user must specify how the target and decoy PSMs are labeled, and the score direction (is a higher score better, or is a lower score better?). The user must also specify a FDR/Q-Value cutoff. 1% is the default.

    The tool has 4 outputs:

    - JOB_NAME PSM-level Step-Down Filter
    - JOB_NAME PSM-level Q-Value Filter
    - JOB_NAME Peptide-level Step-Down Filter
    - JOB_NAME Peptide-level Q-Value Filter

    To control FDR at the peptide-level, one must first select the best scoring PSM for each Peptide, and discard the other PSM's for that peptide. I use the following Python regex to extract the peptide from the row::

    >> ^[A-Z\-]\.(?P&lt;peptide&gt;.*)\.[A-Z\-]$

  
  </help>

</tool>


