<?xml version="1.0" encoding="utf-8"?>
<tool id="msgfplus_runner" name="Run MSGF+ on Proteome" version="20.06">
  <command interpreter="python3">runPipeline.py
  '$proteome'

  #if $fasta
  --additional_proteome '$fasta'
  #end if

  #if str($search_type.search_type_selector) == 'filtered'
  #for $r in $search_type.mhcalleles
  --allele $r.allele.value
  #end for
  --pep_len '$search_type.length'
  --rank_filter '$search_type.rank_filter'
  #else
  --minLength $search_type.minLength
  --maxLength $search_type.maxLength
  #end if

  #if $mods.value
  #for $mod in $mods.value
  --mod "$mod"
  #end for
  #end if
  --num_matches_per_spectrum $numMatches
  --mgf '$mgf'
  --frag_method '$frag_method'

  --instrument '$instrument'

  --msgf_unfiltered '$msgfUnfiltered'
  --percolator_unfiltered '$percolatorUnfiltered'
  
  --archive '$Archive'
  
  &gt; $Log 2&gt;&amp;1
  </command>
  <inputs>
    <param name="Name" type="text" label="Search name" />
    <param name="proteome" type="select" label="Select a proteome">
      <options from_data_table="Proteomes" />
    </param>


    <param optional="true" name="fasta" type="data" label="Select a FASTA file" format="fasta" />


    <param name="mgf" type="data" label="Select an MGF file" format="mgf" />

    <param name="frag_method" type="select" label="Select the fragmentation method">
      <option value="0">CID</option>
      <option value="1">ETD</option>
      <option value="2">HCD</option>
    </param>

    <param name="instrument" type="select" label="Select the instrument">
      <option value="0">Low res LCQ/LTQ</option>
      <option value="1">High Res LCQ/LTQ</option>
      <option value="2">TOF</option>
      <option value="3">Q-Extractive</option>
    </param>

    <param name="mods" type="select" display="checkboxes" label="Select PTMs to include" multiple="true">
      <options from_data_table="PTM" />
    </param>

    <param name="numMatches" type="integer" value="1" label="Num matches per spectrum" />
    <!--- <param name="num_matches_per_spectrum" type="integer" value="1" label="Number of matches per spectrum" /> -->
    <conditional name="search_type">
      <param name="search_type_selector" type="select" label="Choose search type">
	<option value="unfiltered" selected="true">Unfiltered Search</option>
	<option value="filtered">Filtered Search</option>
      </param>
      <when value="filtered">
	<repeat name="mhcalleles" title="Select MHC Alleles">
	  <param name="allele" type="select" label="Select an allele">
	    <options from_data_table="Alleles" />
	  </param>
	</repeat>
	<param name="length" type="select" display="checkboxes" label="Select peptide lengths" multiple="true">
	  <option value="8"></option>
	  <option value="9"></option>
	  <option value="10"></option>
	  <option value="11"></option>
	  <option value="12"></option>
	  <option value="13"></option>
	</param>
	<param name="rank_filter" type="float" min="0" max="100" value="2" label="Take top k percent of peptides from NetMHC" />
      </when>
      <when value="unfiltered">
	<param name="minLength" type="integer" value="6" label="Minimum Peptide Length" />
	<param name="maxLength" type="integer" value="40" label="Max Peptide Length" />
      </when>      
    </conditional>
  </inputs>
  <outputs>
    <!--- <data format="tabular" name="peptides" label="Peptides for search ${Name}"/> -->
    <!--- <data format="tabular" name="PSMs" label="PSMs for search ${Name}" /> -->
    <data format="txt" name="msgfUnfiltered" label="MS-GF+ PSMs Unfiltered for search ${Name}" />
    <data format="txt" name="percolatorUnfiltered" label="Percolator PSMs for search ${Name}" />
    <data name="Log" format="log"  label="Run MSGF+ Log" />
    <data name="Archive" format="zip" label="Archive" />
  </outputs>


  <tests>
    <test>
      <param name="input" value="fa_gc_content_input.fa"/>
      <output name="out_file1" file="fa_gc_content_output.txt"/>
    </test>
  </tests>         
  
  <help>
    The purpose of this tool is to run MS-GF+ and Percolator. 

    First, there's the "select proteome" dropdown. You select the proteome you want to search against. Right now there is only a single option: human. It was extracted from here: ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/reference_proteomes/Eukaryota/UP000005640_9606.fasta.gz in April 2019. 

    Then, there's an option for adding additional protein FASTA files. How these are used depends on the tool's mode, which I will get to in a moment. 

    The fragmentation method, instrument and PTMs should be self explanatory.
    

    Tool Versions


    MS-GF+: v2020.03.14
    msgf2pin: I use a custom version of msgf2pin. I forked the percolator repo: https://github.com/mrForce/msgf2pin-PTM-Mass-Delta
    Percolator: Version 3.02.0 in Crux version 3.20-d57cff
    NetMHC: Version 4.0
    

      Unfiltered Search Mode

    
    In this mode, the tool takes the base proteome, and concats any additional FASTA files to it. Then it runs MS-GF+ and Percolator. 


       Filtered Search Mode


    In this mode, the user must specify a set of peptide lengths, a set of MHC-I alleles, and a rank *k*. For each length-allele combination, the tool "scores" the peptides of that length using NetMHC that allele. I put "scores" in quotes because we pre-computed the scores for the 8-13 mers in the base proteome with each allele supported by NetMHC, so only peptides that are uploaded by the user in the "additional protein FASTA files" are scored by NetMHC on the fly. Then, it selects the top *k* percent best scoring peptides for that length-allele combination. For example, suppose the user specified lengths 8, 9 and 10, and alleles HLA-A0101 and HLA-B0702, and *k* is 2%. Then, the tool would select the following peptides:

    * 2% highest scoring length 8 peptides for HLA-A0101
    * 2% highest scoring length 9 peptides for HLA-A0101
    * 2% highest scoring length 10 peptides for HLA-A0101
    * 2% highest scoring length 8 peptides for HLA-B0702
    * 2% highest scoring length 9 peptides for HLA-B0702
    * 2% highest scoring length 10 peptides for HLA-B0702

    This yields 6 sets of peptides. We concatenate the sets, create a FASTA file from it, and use MS-GF+Percolator to search the MGF file against this FASTA file.

    Just a few points to clarify here:

    * The entries in the uploaded FASTA files are considered proteins, so they will be cut into the lengths specified by the user.
    * The rank cutting is done after combining the peptides from the uploaded FASTA(s) and base proteome.
    * NetMHC provides a rank output for each peptide. We do **not** use this; the rank is relative to the scored set of peptides.


    Outputs

    There are four outputs:

    1. MS-GF+ PSMs
    2. Percolator PSMs
    3. Log
    4. Archive

    The first output is essentially the PIN generated by msgf2pin, except with the second row removed. This second row contains information that Percolator needs, but is otherwise not useful to us.

    The second output is a little more complicated. Even though we do the search against a concatenated set of target and decoy peptides, Percolator seperates the target and decoy PSMs into two seperate outputs: percolator.target.psms.txt and percolator.decoy.psms.txt. These are both TSV files, where the first row is a header row, and the remaining rows are PSMs. To generate the output for our tool, we take the two files, insert a column with the header Label. This column contains 1 for each row in percolator.target.psms.txt, and -1 for each row in percolator.decoy.psms.txt. Then, the two files are concatenated, with the header row from percolator.decoy.psms.txt removed.

    The third output is a log file; it contains the stdout and stderr of MS-GF+, msgf2pin, and Percolator, and the commands that were ran themselves, if you're interested in that.

    The fourth output is a ZIP file. It contains the following files (buried under many layers of folders):

    * The MGF file that was searched. It doesn't retain the original name.
    * The Modifications file that was passed to MS-GF+.
    * a database.db file that I may use for debugging purposes
    * The MS-GF+ index files
    * The MS-GF+ search output. search.mzid is created by MS-GF+, and search.mzid.pin is created by msgf2pin
    * The percolator output files. These are: percolator.decoy.peptides.txt, percolator.decoy.psms.txt, percolator.log.txt, percolator.params.txt, percolator.target.peptides.txt and percolator.target.psms.txt


  </help>

</tool>


